<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo多设备同步与版本控制实现]]></title>
    <url>%2Fhexo%E5%A4%9A%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5%E4%B8%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[##hexo多设备同步与版本控制实现 我们知道，hexo是一个静态网页个人博客，所有的资源和文件都是储存在本地的，但这样不利于实现网页的版本控制和随时随地发表博客，因此Google了一下hexo多设备同步的问题。 ##环境要求已经能正常使用和deploy的hexo仓库，一个GitHub账号，对Git使用较为熟悉。 ##使用网盘同步最简单的方式其实就是直接把你博客的文件夹保存在网盘中，可自动实现同步。推荐使用OneDrive或者Google Drive。当需要使用新设备写作时，可直接复制这个文件夹，然后安装node.js和hexo即可。这种方法的好处当然是简单直观，但无法做到版本同步，作为计算机的学生，怎么能不使用GitHub进行同步呢~ ##使用GitHub进行同步使用分支搭建博客其实，Hexo生成的网站文件中有.gitignore文件，因此它的本意也是想我们将Hexo生成的网站文件存放到GitHub上进行管理。 ##博客搭建流程：123456781. 创建仓库，youraccount.github.io 2. 创建两个分支：master 与 hexo 3. 设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件，master分支为hexo deploy自动生成和管理） 4. 使用git clone git@github.com:youraccount/youraccount.github.io.git拷贝仓库 5. 在本地youraccount.github.io文件夹下通过Git bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo） 6. 修改_config.yml中的deploy参数，分支应为master 7. 依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件 8. 执行hexo generate -d生成网站并部署到GitHub上 这样一来，在GitHub上的youraccount.github.io仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页 ##在新设备中安装node.js和Git无需多说，直接安装：node.js，Git。 ##给新设备添加SSH KEYS在Git Bash中输入： 1ssh-keygen -t rsa -C “你的邮箱地址” 按三次回车（密码为空），生成密匙。在C:\Users\Administrator.ssh中（Administrator为自己对应的管理员账号），得到两个文件，分别为id_rsa和id_rsa.pub。打开id_rsa.pub，复制全文。进入GitHub中的SSH设置 ，Add SSH key，粘贴进去。 ##新设备同步使用1git clone git@github.com:youraccount/youraccount.github.io.git 拷贝仓库（默认分支为hexo）在本地得到的youraccount.github.io文件夹下通过Git bash依次执行下列指令：1npm install -g hexo 1npm install 1npm install hexo-deployer-git 即可将最新的博客文件全部同步。 ##日常维护在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理： 依次执行git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为hexo） 执行hexo generate -d发布网站到master分支上]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post 1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[html语法之超链接标签详解]]></title>
    <url>%2Fhtml%E8%AF%AD%E6%B3%95%E4%B9%8B%E8%B6%85%E9%93%BE%E6%8E%A5%E6%A0%87%E7%AD%BE%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[HTML 标签##实例指向w3cshchool的超级链接1&lt;a href=&quot;http://www.w3school.com.cn&quot;&gt;W3School&lt;/a&gt; 定义和用法 标签定义超链接，用于从一张页面链接到另一张页面。 元素最重要的属性是 href 属性，它指示链接的目标。在所有浏览器中，链接的默认外观是：未被访问的链接带有下划线而且是蓝色的已被访问的链接带有下划线而且是紫色的活动链接带有下划线而且是红色的提示：您可能已经注意到了，W3School 站点内的链接外观与默认的链接外观非常不同。您可以使用 CSS 伪类 向文本超链接添加复杂而多样的样式。 术语解释:什么是超文本标记语言的真正威力在于其收集能力，它可以将收集来的文档组合成一个完整的信息库，并且可以将文档库与世界上的其他文档集合链接起来。 这样的话，读者不仅可以完全控制文档在屏幕上的显示，还可以通过超链接来控制浏览信息的顺序。这就是 HTML 和 XHTML 中的 “HT” - 超文本（hypertext），就是它将整个 Web 网络连接起来。 超文本的基础知识超文本的基本特征就是可以超链接文档；你可以指向其他位置，该位置可以在当前的文档中、局域网中的其他文档，也可以在因特网上的任何位置的文档中。这些文档组成了一个杂乱的信息网。目标文档通常与其来源有某些关联，并且丰富了来源；来源中的链接元素则将这种关系传递给浏览者。 超链接可以用于各种效果。超链接可以用在目录和主题列表中。浏览者可以在浏览器屏幕上单击鼠标或在键盘上按下按键，从而选择并自动跳转到文档中自己感兴趣的那个主题，或跳转到世界上某处完全不同的集合中的某个文档。 超链接还可以向浏览者指出有关文档中某个主题的更多信息。例如，“如果您想了解更详细的信息，请参阅某某页面。”。作者可以使用超链接来减少重复信息。例如，我们建议创作者在每个文档中都签署上自己的姓名。这样就可以使用一个将名字和另一个包含地址、电话号码等信息的单独文档链接起来的超链接，而不必在每个文档中都包含完整的联系信息。 超链接（hyper text），或者按照标准叫法称为锚（anchor），是使用 标签标记的，可以用两种方式表示。锚的一种类型是在文档中创建一个热点，当用户激活或选中（通常是使用鼠标）这个热点时，会导致浏览器进行链接。浏览器会自动加载并显示同一文档或其他文档中的某个部分，或触发某些与因特网服务相关的操作，例如发送电子邮件或下载特殊文件等。锚的另一种类型会在文档中创建一个标记，该标记可以被超链接引用。 还有一些与超链接相关联的鼠标相关事件。这些事件与 JavaScript 结合使用可以产生一些令人激动的效果。 注释锚的这两种类型都使用同样的标签；也许这就是它们拥有同样的名称的原因。但是我们发现，如果将它们区分开，把提供热点和超链接地址的锚看作“链接”，而用于标记文档的目标部分的锚称为“锚”，那么您将更容易理解这两种类型的锚。 创建超链接1234567891011&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;/index.html&quot;&gt;本文本&lt;/a&gt; 是一个指向本网站中的一个页面的链接。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.microsoft.com/&quot;&gt;本文本&lt;/a&gt; 是一个指向万维网上的页面的链接。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 显示结果› 本文本 是一个指向本网站中的一个页面的链接。› 本文本 是一个指向万维网上的页面的链接。 链接到同一个页面的不同位置12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;#C4&quot;&gt;查看 Chapter 4。&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Chapter 1&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 2&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 3&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;C4&quot;&gt;Chapter 4&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 5&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 6&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 7&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 8&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 9&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 10&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 11&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 12&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 13&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 14&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 15&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 16&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;h2&gt;Chapter 17&lt;/h2&gt;&lt;p&gt;This chapter explains ba bla bla&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 设置链接在新浏览器中打开1234567891011&lt;html&gt;&lt;body&gt;&lt;a href=&quot;http://www.w3school.com.cn/&quot; target=&quot;_blank&quot;&gt;Visit W3School!&lt;/a&gt;&lt;p&gt;如果把链接的 target 属性设置为 &quot;_blank&quot;，该链接会在新窗口中打开。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 创建电子邮件（只带主题）123456789101112131415&lt;html&gt;&lt;body&gt;&lt;p&gt;这是邮件链接：&lt;a href=&quot;mailto:someone@microsoft.com?subject=Hello%20again&quot;&gt;发送邮件&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;注意：&lt;/b&gt;应该使用 %20 来替换单词之间的空格，这样浏览器就可以正确地显示文本了。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 创建电子邮件（带抄送、密送、邮件主题、邮件内容）123456789101112131415&lt;html&gt;&lt;body&gt;&lt;p&gt;这是邮件链接：&lt;a href=&quot;mailto:someone@microsoft.com?subject=Hello%20again&quot;&gt;发送邮件&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;注意：&lt;/b&gt;应该使用 %20 来替换单词之间的空格，这样浏览器就可以正确地显示文本了。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[ME的语法之表格与制图]]></title>
    <url>%2FME%E7%9A%84%E8%AF%AD%E6%B3%95%E4%B9%8B%E8%A1%A8%E6%A0%BC%E4%B8%8E%E5%88%B6%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[MarkEditor 不仅是更易于输入表格，还能自动生成线图、柱状图、饼图…… MarkEditor风格的表格语法1234项目 | 价格 | 描述尺子 | ￥2 | 说明内容，也可为空本子 | ￥8 (描述偷懒不写完第三项也可以，不会破坏表格结构) Tip | ￥18 | **光标在表格区域时，右键点击，有更简单的“编辑表格”命令** 第一行是表格的第一栏，每个项的文本中可以追加(-)、(&gt;)、(&lt;)来实现某列内的文本对齐，它们也分别等同于(center)、(right)、(left)。123项目(-) | 价格(&gt;) | 描述(&lt;) 尺子 | ￥20 | ? 本子 | ￥8 自定义补全缺失的字符123项目 | 价格 | 描述尺子 本子 表格会自动补全缺失的列，这样一来，尺子和本子的价格、描述就全部是我是缺失的补全了。 自动制图语法MarkEditor 支持三种类型的制图，声明 table 的时候，后面加上 line、pie、bar三者之一即可。比如下面的 Demo (具体效果，可以查看预览) 柱状图最简单的一个图表:12衬衫 | 羊毛衫 | 雪纺衫 | 裤子 | 高跟鞋 | 袜子15 | 20 | 36 | 10 | 10 | 20 也可以是横向的:1234567品类 | 数量衬衫 | 15羊毛衫 | 20 雪纺衫 | 36裤子 | 10高跟鞋 | 10袜子 | 20 还可以是这种横纵两个维度的:12345季度 | 衬衫 | 羊毛衫 | 雪纺衫 | 裤子 | 高跟鞋 | 袜子1季度 | 5 | 20 | 36 | 10 | 10 | 212季度 | 15 | 20 | 6 | 10 | 10 | 303季度上(3季度) | 2 | 2 | 16 | 8 | 6 | 303季度下(3季度) | 5 | 2 | 13 | 10 | 9 | 20 注意: 3季度上(3季度) 和 3季度下(3季度)会自动实现归档，合并到同一个柱状图中。 线图跟柱状图非常类似，只需要将上面柱状图的几个 demo，由table:bar改为table:line即可。 饼图最简单的一个图表:12衬衫 | 羊毛衫 | 雪纺衫 | 裤子 | 高跟鞋 | 袜子15 | 20 | 36 | 10 | 10 | 20 也可以是横向的:1234567品类 | 数量衬衫 | 15羊毛衫 | 20 雪纺衫 | 36裤子 | 10高跟鞋 | 10袜子 | 20 自动归档:1234567品类 | 数量衬衫(衣服) | 15羊毛衫(衣服) | 20 雪纺衫(衣服) | 36裤子 | 10高跟鞋(鞋袜) | 10袜子(鞋袜) | 20]]></content>
  </entry>
  <entry>
    <title><![CDATA[ME 的基础语法]]></title>
    <url>%2FME-%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[代码高亮语法通过fenced code的方式(代码块的头尾被三个反引号包裹)，然后声明代码语言类型，即可实现代码高亮。不仅仅是最终的HTML预览会处理代码高亮，实时输入的过程中也是高亮的。1s = 'hello world' 代码语言的类型后面跟上:n，则最终在渲染为HTML(预览)的时候，代码块会标示行数。1s = &apos;hello world&apos; 代码高亮示例 MarkEditor支持超过300种代码类型的高亮，以下是一些示例: 123from settings import worldif world == 'mine': kept = keep(world) 123sum = 1 + 2a, b = 1, 21 &gt; 2 ? true : false; puts 'Hi' 123import Cocoalet a = 4var s = "Hello " + "World!" 123456var express = require('express');var app = express();app.get('/', function(req, res)&#123; res.send('hello world');&#125;);app.listen(3000);]]></content>
  </entry>
  <entry>
    <title><![CDATA[恰到好处的MarkDown编辑器MarkEditor]]></title>
    <url>%2F%E6%81%B0%E5%88%B0%E5%A5%BD%E5%A4%84%E7%9A%84MarkDown%E7%BC%96%E8%BE%91%E5%99%A8MarkEditor%2F</url>
    <content type="text"><![CDATA[恰到好处的MarkEditor MarkEditor不拘泥于Markdown，在保持简洁的同时，近百项的功能，赋予文本以最大的可能。注意: 这是帮助文档，不能保存、删除，你应该打开一个文件夹(推荐)或文章，或者新建一个 Tab (Command+T)开始。第一次使用时，请首先尝试文章保存、历史版本能否正常工作，以避免不必要的数据损失。 恰到好处的写作体验MarkEditor尽可能使用色彩区分文本，来体现文本在Markdown的世界中最终应该是什么模样。你还可以选定一个音乐文件夹，书写的时候，音乐响起，就是最好的世界了。除此之外，还有Focus模式，凸现当前段落文本；以及夜间模式，在夜深时分，降低过亮的光线对眼睛的伤害。 更高效地书写高效也是MarkEditor在追求的设计目标，你可以使用多标签栏同时编辑多篇文章，也可以使用我的工作目录让自己的文档变得有条理、并快速切换。MarkEditor尽可能兼容了Markdown现存的各种语法，也做了不少改进: 比如易读易写插入表格的语法，比如拖入图片即可插图，比如代码输入时的即时高亮… Enjoy!]]></content>
  </entry>
</search>
